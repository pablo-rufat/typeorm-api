{
   "name": "typeorm-test",
   "version": "0.0.1",
   "description": "Awesome project developed with TypeORM.",
   "devDependencies": {
      "@types/bcrypt": "^3.0.0",
      "@types/express": "^4.17.7",
      "@types/jsonwebtoken": "^8.5.0",
      "@types/node": "^8.0.29",
      "cross-env": "^7.0.2",
      "jest": "^26.1.0",
      "nodemon": "^2.0.4",
      "supertest": "^4.0.2",
      "ts-jest": "^26.1.3",
      "ts-node": "3.3.0",
      "tsconfig-paths": "^3.10.1",
      "typescript": "3.3.3333"
   },
   "dependencies": {
      "@types/jest": "^26.0.5",
      "@types/supertest": "^2.0.10",
      "bcrypt": "^5.0.0",
      "body-parser": "^1.19.0",
      "dotenv": "^8.2.0",
      "express": "^4.15.4",
      "jsonwebtoken": "^8.5.1",
      "pg": "^7.3.0",
      "reflect-metadata": "^0.1.10",
      "typeorm": "0.2.25",
      "typeorm-naming-strategies": "^1.1.0"
   },
   "scripts": {
      "dev:run": "npm run postgres:start && sleep 3 && npm run database:create && npm run migration:run && nodemon src/index.ts",
      "dev": "nodemon src/index.ts",
      "start": "ts-node src/index.ts",
      "test:run": "npm run postgres:start && sleep 3 && npm run database:create && npm run migration:run && npm run test",
      "test": "cross-env NODE_ENV=test jest --forceExit",
      "migration:create": "typeorm migration:create --dir src/migration --name ",
      "migration:generate": "ts-node -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:generate --name ",
      "migration:revert": "ts-node -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:revert",
      "migration:rebuild": "npm run docker:clear && npm run postgres:start && sleep 15 && npm run database:create && npm run migration:generate new && npm run migration:run new",
      "migration:run": "ts-node -r dotenv/config -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:run",
      "postgres:start": "docker run -d -p 5432:5432 --name postgres -e POSTGRES_HOST_AUTH_METHOD=trust postgres",
      "database:create": "docker exec postgres psql -U postgres postgres -c \"CREATE DATABASE $(grep DB_DATABASE_NAME .env | cut -d= -f 2)\""
   }
}
